---
- name: Setup Node Exporter
  hosts: node_exporter_servers
  become: yes
  vars_files:
    - vars/main.yml
  tasks:

    - name: Download Node Exporter
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/node_exporter/releases/latest/download/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"

    - name: Extract Node Exporter
      ansible.builtin.unarchive:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
        dest: "/tmp/"
        remote_src: yes

    - name: Move Node Exporter binary
      ansible.builtin.copy:
        src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
        dest: "/usr/local/bin/node_exporter"
        mode: '0755'
        remote_src: yes

    - name: Create node_exporter user
      ansible.builtin.user:
        name: "node_exporter"
        shell: "/bin/false"
        system: yes
        create_home: no

    - name: Create systemd service file for Node Exporter
      ansible.builtin.copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=node_exporter
          Group=node_exporter
          Type=simple
          ExecStart=/usr/local/bin/node_exporter

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Start and enable Node Exporter service
      ansible.builtin.systemd:
        name: node_exporter
        state: started
        enabled: yes

    - name: Allow Node Exporter port in firewall
      ansible.builtin.ufw:
        rule: allow
        port: 9100
        proto: tcp
      when: ansible_facts['os_family'] == "Debian"

    - name: Allow Node Exporter port in firewalld
      ansible.builtin.firewalld:
        service: node_exporter
        permanent: yes
        immediate: yes
        state: enabled
      when: ansible_facts['os_family'] == "RedHat"
      notify:
        - Reload firewalld

  handlers:
    - name: Reload firewalld
      ansible.builtin.service:
        name: firewalld
        state: reloaded
